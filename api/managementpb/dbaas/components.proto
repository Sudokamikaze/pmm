syntax = "proto3";

package dbaas.v1beta1;

option go_package = "api/managementpb/dbaas;dbaasv1beta1";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";

// TODO move it to parent directory / package once API is v1-stable

// Component contains information about component.
message Component {
  string image_path = 1;
  string image_hash = 2;
  string status = 3;
  bool critical = 4;
  bool default = 5;
  bool disabled = 6;
}

// Matrix contains all available components.
message Matrix {
  map<string, Component> mongod = 1;
  map<string, Component> pxc = 2;
  map<string, Component> pmm = 3;
  map<string, Component> proxysql = 4;
  map<string, Component> haproxy = 5;
  map<string, Component> backup = 6;
  map<string, Component> operator = 7;
  map<string, Component> log_collector = 8;
}

// Version contains information about operator and components matrix.
message Version {
  string product = 1;
  string operator = 2;
  Matrix matrix = 3;
}

message GetPSMDBComponentsRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1;
  // Version of DB.
  string db_version = 2;
}

message GetPSMDBComponentsResponse {
  repeated Version versions = 1;
}

message GetPXCComponentsRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1;
  // Version of DB.
  string db_version = 2;
}

message GetPXCComponentsResponse {
  repeated Version versions = 1;
}

// SetComponent contains fields to manage components.
message SetComponent {
  string default_version = 1;
  repeated string disable_versions = 2;
  repeated string enable_versions = 3;
}

message SetPSMDBComponentsRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  SetComponent mongod = 2;
}

message SetPSMDBComponentsResponse {}

message SetPXCComponentsRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  SetComponent pxc = 2;
  SetComponent proxysql = 3;
}

message SetPXCComponentsResponse {}

// Components service provides public methods for managing components.
service Components {
  // GetPSMDBComponents returns list of available components for PSMDB Clusters.
  rpc GetPSMDBComponents(GetPSMDBComponentsRequest) returns (GetPSMDBComponentsResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/Components/GetPSMDB"
      body: "*"
    };
  }
  // GetPXCComponents returns list of available components for PXC Clusters.
  rpc GetPXCComponents(GetPXCComponentsRequest) returns (GetPXCComponentsResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/Components/GetPXC"
      body: "*"
    };
  }
  // SetPSMDBComponents manages PSMDB related components.
  rpc SetPSMDBComponents(SetPSMDBComponentsRequest) returns (SetPSMDBComponentsResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/Components/SetPSMDB"
      body: "*"
    };
  }
  // SetPXCComponents manages PXC related components.
  rpc SetPXCComponents(SetPXCComponentsRequest) returns (SetPXCComponentsResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/Components/SetPXC"
      body: "*"
    };
  }
}
